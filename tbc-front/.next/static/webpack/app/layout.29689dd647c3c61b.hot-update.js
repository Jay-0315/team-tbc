"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkBackendHealth: function() { return /* binding */ checkBackendHealth; },\n/* harmony export */   checkEmail: function() { return /* binding */ checkEmail; },\n/* harmony export */   checkNickname: function() { return /* binding */ checkNickname; },\n/* harmony export */   ensureBackendRunning: function() { return /* binding */ ensureBackendRunning; },\n/* harmony export */   fetchJson: function() { return /* binding */ fetchJson; },\n/* harmony export */   findId: function() { return /* binding */ findId; },\n/* harmony export */   getCurrentUser: function() { return /* binding */ getCurrentUser; },\n/* harmony export */   getOAuth2GoogleLoginUrl: function() { return /* binding */ getOAuth2GoogleLoginUrl; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   logout: function() { return /* binding */ logout; },\n/* harmony export */   refreshTokens: function() { return /* binding */ refreshTokens; },\n/* harmony export */   resetPassword: function() { return /* binding */ resetPassword; },\n/* harmony export */   signup: function() { return /* binding */ signup; }\n/* harmony export */ });\n// 공통 fetch 래퍼 - Vite 프록시 사용\n// 개발 환경에서는 Vite 프록시를 통해 상대 경로 사용\n// 프로덕션에서는 Nginx 프록시를 통해 상대 경로 사용\nconst API_BASE =  true ? \"\" : 0;\nasync function fetchJson(url) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, alreadyRetried = arguments.length > 2 ? arguments[2] : void 0;\n    try {\n        console.log(\"API 요청: \".concat(options.method || \"GET\", \" \").concat(url));\n        const response = await fetch(\"\".concat(API_BASE).concat(url), {\n            ...options,\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...options.headers || {}\n            }\n        });\n        console.log(\"API 응답: \".concat(response.status, \" \").concat(response.statusText));\n        if (response.status === 401 && !alreadyRetried) {\n            await refreshTokens();\n            return fetchJson(url, options, true);\n        }\n        if (!response.ok) {\n            let message = \"Request failed: \".concat(response.status);\n            try {\n                const body = await response.json();\n                if (body === null || body === void 0 ? void 0 : body.message) message = body.message;\n            } catch (e) {\n            // JSON 파싱 실패 시 기본 메시지 사용\n            }\n            // 백엔드 서버가 실행되지 않은 경우\n            if (response.status === 404) {\n                message = \"백엔드 서버가 실행되지 않았습니다. 서버를 시작해주세요.\";\n            }\n            throw new Error(message);\n        }\n        const contentType = response.headers.get(\"Content-Type\") || \"\";\n        if (contentType.includes(\"application/json\")) return response.json();\n        return response.text();\n    } catch (error) {\n        console.error(\"API 요청 실패: \".concat(url), error);\n        // 네트워크 에러인 경우\n        if (error instanceof TypeError && error.message.includes(\"fetch\")) {\n            throw new Error(\"백엔드 서버에 연결할 수 없습니다. 서버가 실행 중인지 확인해주세요.\");\n        }\n        throw error;\n    }\n}\nasync function refreshTokens() {\n    await fetch(\"\".concat(API_BASE, \"/api/auth/refresh\"), {\n        method: \"POST\",\n        credentials: \"include\"\n    });\n}\nasync function signup(email, realName, password, nickname) {\n    try {\n        await fetchJson(\"/api/auth/signup\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                email,\n                realName,\n                password,\n                nickname\n            })\n        });\n    } catch (error) {\n        console.error(\"회원가입 API 호출 실패:\", error);\n        throw new Error(\"서버에 연결할 수 없습니다. 네트워크 연결을 확인해주세요.\");\n    }\n}\nasync function login(username, password) {\n    const response = await fetchJson(\"/api/auth/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            username,\n            password\n        })\n    });\n    return response;\n}\nasync function logout() {\n    await fetchJson(\"/api/auth/logout\", {\n        method: \"POST\"\n    });\n}\nasync function checkEmail(email) {\n    try {\n        const data = await fetchJson(\"/api/users/check-email?email=\".concat(encodeURIComponent(email)), {\n            method: \"GET\"\n        });\n        return data === true || (data === null || data === void 0 ? void 0 : data.data) === true;\n    } catch (error) {\n        console.warn(\"이메일 중복 확인 API 호출 실패, 임시로 사용 가능으로 처리:\", error);\n        return false // 임시로 사용 가능으로 처리\n        ;\n    }\n}\nasync function checkNickname(nickname) {\n    try {\n        const data = await fetchJson(\"/api/users/check-nickname?nickname=\".concat(encodeURIComponent(nickname)), {\n            method: \"GET\"\n        });\n        return data === true || (data === null || data === void 0 ? void 0 : data.data) === true;\n    } catch (error) {\n        console.warn(\"닉네임 중복 확인 API 호출 실패, 임시로 사용 가능으로 처리:\", error);\n        return false // 임시로 사용 가능으로 처리\n        ;\n    }\n}\nasync function findId(emailOrPhone) {\n    await fetchJson(\"/api/auth/find-id\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            emailOrPhone\n        })\n    });\n}\nasync function resetPassword(username) {\n    await fetchJson(\"/api/auth/reset-password\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            username\n        })\n    });\n}\nfunction getOAuth2GoogleLoginUrl() {\n    return \"\".concat(API_BASE, \"/oauth2/authorization/google\");\n}\nasync function getCurrentUser() {\n    return await fetchJson(\"/api/auth/me\", {\n        method: \"GET\"\n    });\n}\n// 백엔드 서버 상태 확인\nasync function checkBackendHealth() {\n    try {\n        const response = await fetch(\"/api/health\", {\n            method: \"GET\",\n            credentials: \"include\"\n        });\n        return response.ok;\n    } catch (e) {\n        return false;\n    }\n}\n// 백엔드 서버 상태를 확인하고 사용자에게 알림\nasync function ensureBackendRunning() {\n    const isHealthy = await checkBackendHealth();\n    if (!isHealthy) {\n        throw new Error(\"백엔드 서버가 실행되지 않았습니다. 서버를 시작한 후 다시 시도해주세요.\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});